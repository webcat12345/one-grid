{"version":3,"file":"angular2-grid.js","sources":["ng://angular2-grid/helpers/NgGridHelpers.ts","ng://angular2-grid/components/NgGridPlaceholder.ts","ng://angular2-grid/directives/NgGrid.ts","ng://angular2-grid/directives/NgGridItem.ts","ng://angular2-grid/modules/NgGrid.module.ts"],"sourcesContent":["import { NgGridItem } from \"../directives/NgGridItem\";\n\nexport function generateUuid(): string {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tlet r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16);\n\t});\n}\n\nexport function sortItemsByPositionHorizontal(a: NgGridItem, b: NgGridItem): number {\n\tif (a.col === b.col) { return a.row - b.row; }\n\treturn a.col - b.col;\n}\n\nexport function sortItemsByPositionVertical(a: NgGridItem, b: NgGridItem): number {\n\tif (a.row === b.row) { return a.col - b.col; }\n\treturn a.row - b.row;\n}\n","import { NgGrid } from '../directives/NgGrid';\nimport { NgGridItemPosition, NgGridItemSize } from '../interfaces/INgGrid';\nimport { Component, Directive, ElementRef, Renderer2, EventEmitter, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\n\n@Component({\n    selector: 'ng-grid-placeholder',\n    template: ''\n})\nexport class NgGridPlaceholder implements OnInit {\n    private _size: NgGridItemSize;\n    private _position: NgGridItemPosition;\n    private _ngGrid: NgGrid;\n    private _cascadeMode: string;\n\n    constructor(private _ngEl: ElementRef, private _renderer: Renderer2) { }\n\n    public registerGrid(ngGrid: NgGrid) {\n        this._ngGrid = ngGrid;\n    }\n\n    public ngOnInit(): void {\n        this._renderer.addClass(this._ngEl.nativeElement, 'grid-placeholder');\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'position', 'absolute');\n    }\n\n    public setSize(newSize: NgGridItemSize): void {\n        this._size = newSize;\n        this._recalculateDimensions();\n    }\n\n    public setGridPosition(newPosition: NgGridItemPosition): void {\n        this._position = newPosition;\n        this._recalculatePosition();\n    }\n\n    public setCascadeMode(cascade: string): void {\n        this._cascadeMode = cascade;\n        switch (cascade) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', '0px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', '0px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'right':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', '0px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', '0px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'down':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', '0px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', '0px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', null);\n                break;\n        }\n    }\n\n    // Private methods\n    private _setDimensions(w: number, h: number): void {\n        this._renderer.setStyle(this._ngEl.nativeElement, 'width', w + 'px');\n        this._renderer.setStyle(this._ngEl.nativeElement, 'height', h + 'px');\n    }\n\n    private _setPosition(x: number, y: number): void {\n        switch (this._cascadeMode) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setStyle(this._ngEl.nativeElement, 'transform', 'translate(' + x + 'px, ' + y + 'px)');\n                break;\n            case 'right':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'transform', 'translate(' + -x + 'px, ' + y + 'px)');\n                break;\n            case 'down':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'transform', 'translate(' + x + 'px, ' + -y + 'px)');\n                break;\n        }\n    }\n\n    private _recalculatePosition(): void {\n        const x: number = (this._ngGrid.colWidth + this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._position.col - 1) + this._ngGrid.marginLeft + this._ngGrid.screenMargin;\n        const y: number = (this._ngGrid.rowHeight + this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._position.row - 1) + this._ngGrid.marginTop;\n        this._setPosition(x, y);\n    }\n\n    private _recalculateDimensions(): void {\n        const w: number = (this._ngGrid.colWidth * this._size.x) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._size.x - 1));\n        const h: number = (this._ngGrid.rowHeight * this._size.y) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._size.y - 1));\n        this._setDimensions(w, h);\n    }\n}\n","import { Component, Directive, ElementRef, Renderer2, EventEmitter, ComponentFactoryResolver, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\nimport { NgGridConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, NgConfigFixDirection } from '../interfaces/INgGrid';\nimport { NgGridItem } from './NgGridItem';\nimport * as NgGridHelper from '../helpers/NgGridHelpers';\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\nimport { Subscription, Observable, fromEvent } from 'rxjs';\n\n@Directive({\n    selector: '[ngGrid]',\n    inputs: ['config: ngGrid'],\n    host: {\n        '(window:resize)': 'resizeEventHandler($event)',\n    }\n})\nexport class NgGrid implements OnInit, DoCheck, OnDestroy {\n    public static CONST_DEFAULT_RESIZE_DIRECTIONS: string[] = [\n        'bottomright',\n        'bottomleft',\n        'topright',\n        'topleft',\n        'right',\n        'left',\n        'bottom',\n        'top',\n    ];\n\n    // Event Emitters\n    @Output() public onDragStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onDrag: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onDragStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onResizeStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onResize: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onResizeStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onItemChange: EventEmitter<Array<NgGridItemEvent>> = new EventEmitter<Array<NgGridItemEvent>>();\n\n    // Public variables\n    public colWidth: number = 250;\n    public rowHeight: number = 250;\n    public minCols: number = 1;\n    public minRows: number = 1;\n    public marginTop: number = 10;\n    public marginRight: number = 10;\n    public marginBottom: number = 10;\n    public marginLeft: number = 10;\n    public screenMargin: number = 0;\n    public isDragging: boolean = false;\n    public isResizing: boolean = false;\n    public autoStyle: boolean = true;\n    public resizeEnable: boolean = true;\n    public dragEnable: boolean = true;\n    public cascade: string = 'up';\n    public minWidth: number = 100;\n    public minHeight: number = 100;\n    public resizeDirections: string[] = NgGrid.CONST_DEFAULT_RESIZE_DIRECTIONS;\n\n    // Private variables\n    private _items: Map<string, NgGridItem> = new Map<string, NgGridItem>();\n    private _draggingItem: NgGridItem = null;\n    private _resizingItem: NgGridItem = null;\n    private _resizeDirection: string = null;\n    private _itemsInGrid: Set<string> = new Set<string>();\n    private _containerWidth: number;\n    private _containerHeight: number;\n    private _maxCols: number = 0;\n    private _maxRows: number = 0;\n    private _visibleCols: number = 0;\n    private _visibleRows: number = 0;\n    private _setWidth: number = 250;\n    private _setHeight: number = 250;\n    private _posOffset: NgGridRawPosition = null;\n    private _adding: boolean = false;\n    private _placeholderRef: ComponentRef<NgGridPlaceholder> = null;\n    private _fixToGrid: boolean = false;\n    private _autoResize: boolean = false;\n    private _differ: KeyValueDiffer<string, any>;\n    private _destroyed: boolean = false;\n    private _maintainRatio: boolean = false;\n    private _aspectRatio: number;\n    private _preferNew: boolean = false;\n    private _zoomOnDrag: boolean = false;\n    private _limitToScreen: boolean = false;\n    private _centerToScreen: boolean = false;\n    private _curMaxRow: number = 0;\n    private _curMaxCol: number = 0;\n    private _dragReady: boolean = false;\n    private _resizeReady: boolean = false;\n    private _elementBasedDynamicRowHeight: boolean = false;\n    private _itemFixDirection: NgConfigFixDirection = 'cascade';\n    private _collisionFixDirection: NgConfigFixDirection = 'cascade';\n    private _allowOverlap: boolean = false;\n    private _cascadePromise: Promise<void>;\n    private _lastZValue: number = 1;\n\n    // Events\n    private _documentMousemove$: Observable<MouseEvent>;\n    private _documentMouseup$: Observable<MouseEvent>;\n    private _mousedown$: Observable<MouseEvent>;\n    private _mousemove$: Observable<MouseEvent>;\n    private _mouseup$: Observable<MouseEvent>;\n    private _touchstart$: Observable<TouchEvent>;\n    private _touchmove$: Observable<TouchEvent>;\n    private _touchend$: Observable<TouchEvent>;\n    private _subscriptions: Subscription[] = [];\n\n    private _enabledListener: boolean = false;\n\n    // Default config\n    private static CONST_DEFAULT_CONFIG: NgGridConfig = {\n        margins: [10],\n        draggable: true,\n        resizable: true,\n        max_cols: 0,\n        max_rows: 0,\n        visible_cols: 0,\n        visible_rows: 0,\n        col_width: 250,\n        row_height: 250,\n        cascade: 'up',\n        min_width: 100,\n        min_height: 100,\n        fix_to_grid: false,\n        auto_style: true,\n        auto_resize: false,\n        maintain_ratio: false,\n        prefer_new: false,\n        zoom_on_drag: false,\n        limit_to_screen: false,\n        center_to_screen: false,\n        resize_directions: NgGrid.CONST_DEFAULT_RESIZE_DIRECTIONS,\n        element_based_row_height: false,\n        fix_item_position_direction: 'cascade',\n        fix_collision_position_direction: 'cascade',\n        allow_overlap: false,\n    };\n    private _config = NgGrid.CONST_DEFAULT_CONFIG;\n\n    // [ng-grid] attribute handler\n    set config(v: NgGridConfig) {\n        if (v == null || typeof v !== 'object') {\n            return;\n        }\n\n        this.setConfig(v);\n\n        if (this._differ == null && v != null) {\n            this._differ = this._differs.find(this._config).create();\n        }\n\n        this._differ.diff(this._config);\n    }\n\n    // Constructor\n    constructor(\n        private _differs: KeyValueDiffers,\n        private _ngEl: ElementRef,\n        private _renderer: Renderer2,\n        private componentFactoryResolver: ComponentFactoryResolver,\n    ) {\n        this._defineListeners();\n    }\n\n    // Public methods\n    public ngOnInit(): void {\n        this._renderer.addClass(this._ngEl.nativeElement, 'grid');\n        if (this.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'position', 'relative');\n        this.setConfig(this._config);\n    }\n\n    public ngOnDestroy(): void {\n        this._destroyed = true;\n        this._disableListeners();\n    }\n\n    public generateItemUid(): string {\n        const uid: string = NgGridHelper.generateUuid();\n\n        if (this._items.has(uid)) {\n            return this.generateItemUid();\n        }\n\n        return uid;\n    }\n\n    public setConfig(config: NgGridConfig): void {\n        this._config = config;\n\n        var maxColRowChanged = false;\n        for (var x in config) {\n            var val = config[x];\n            var intVal = !val ? 0 : parseInt(val);\n\n            switch (x) {\n                case 'margins':\n                    this.setMargins(val);\n                    break;\n                case 'col_width':\n                    this.colWidth = Math.max(intVal, 1);\n                    break;\n                case 'row_height':\n                    this.rowHeight = Math.max(intVal, 1);\n                    break;\n                case 'auto_style':\n                    this.autoStyle = val ? true : false;\n                    break;\n                case 'auto_resize':\n                    this._autoResize = val ? true : false;\n                    break;\n                case 'draggable':\n                    this.dragEnable = val ? true : false;\n                    break;\n                case 'resizable':\n                    this.resizeEnable = val ? true : false;\n                    break;\n                case 'max_rows':\n                    maxColRowChanged = maxColRowChanged || this._maxRows != intVal;\n                    this._maxRows = intVal < 0 ? 0 : intVal;\n                    break;\n                case 'max_cols':\n                    maxColRowChanged = maxColRowChanged || this._maxCols != intVal;\n                    this._maxCols = intVal < 0 ? 0 : intVal;\n                    break;\n                case 'visible_rows':\n                    this._visibleRows = Math.max(intVal, 0);\n                    break;\n                case 'visible_cols':\n                    this._visibleCols = Math.max(intVal, 0);\n                    break;\n                case 'min_rows':\n                    this.minRows = Math.max(intVal, 1);\n                    break;\n                case 'min_cols':\n                    this.minCols = Math.max(intVal, 1);\n                    break;\n                case 'min_height':\n                    this.minHeight = Math.max(intVal, 1);\n                    break;\n                case 'min_width':\n                    this.minWidth = Math.max(intVal, 1);\n                    break;\n                case 'zoom_on_drag':\n                    this._zoomOnDrag = val ? true : false;\n                    break;\n                case 'cascade':\n                    if (this.cascade != val) {\n                        this.cascade = val;\n                        this._cascadeGrid();\n                    }\n                    break;\n                case 'fix_to_grid':\n                    this._fixToGrid = val ? true : false;\n                    break;\n                case 'maintain_ratio':\n                    this._maintainRatio = val ? true : false;\n                    break;\n                case 'prefer_new':\n                    this._preferNew = val ? true : false;\n                    break;\n                case 'limit_to_screen':\n                    this._limitToScreen = !this._autoResize && !!val;\n                    if (this._limitToScreen) {\n                      this._maxCols = this._getContainerColumns();\n                    }\n                    break;\n                case 'center_to_screen':\n                    this._centerToScreen = val ? true : false;\n                    break;\n                case 'resize_directions':\n                    this.resizeDirections = val || ['bottomright', 'bottomleft', 'topright', 'topleft', 'right', 'left', 'bottom', 'top'];\n                    break;\n                case 'element_based_row_height':\n                    this._elementBasedDynamicRowHeight = !!val;\n                    break;\n                case 'fix_item_position_direction':\n                    this._itemFixDirection = val;\n                    break;\n                case 'fix_collision_position_direction':\n                    this._collisionFixDirection = val;\n                    break;\n                case 'allow_overlap':\n                    this._allowOverlap = !!val;\n                    break;\n            }\n        }\n\n        if (this._allowOverlap && this.cascade !== 'off' && this.cascade !== '') {\n            console.warn('Unable to overlap items when a cascade direction is set.');\n            this._allowOverlap = false;\n        }\n\n        if (this.dragEnable || this.resizeEnable) {\n            this._enableListeners();\n        } else {\n            this._disableListeners();\n        }\n\n        if (this._itemFixDirection === 'cascade') {\n            this._itemFixDirection = this._getFixDirectionFromCascade();\n        }\n\n        if (this._collisionFixDirection === 'cascade') {\n            this._collisionFixDirection = this._getFixDirectionFromCascade();\n        }\n\n        if (this._limitToScreen) {\n            const newMaxCols = this._getContainerColumns();\n\n            if (this._maxCols != newMaxCols) {\n                this._maxCols = newMaxCols;\n                maxColRowChanged = true;\n            }\n        }\n\n        if (this._limitToScreen && this._centerToScreen) {\n            this.screenMargin = this._getScreenMargin();\n        } else {\n            this.screenMargin = 0;\n        }\n\n        if (this._maintainRatio) {\n            if (this.colWidth && this.rowHeight) {\n                this._aspectRatio = this.colWidth / this.rowHeight;\n            } else {\n                this._maintainRatio = false;\n            }\n        }\n\n        if (maxColRowChanged) {\n            if (this._maxCols > 0 && this._maxRows > 0) {    //    Can't have both, prioritise on cascade\n                switch (this.cascade) {\n                    case 'left':\n                    case 'right':\n                        this._maxCols = 0;\n                        break;\n                    case 'up':\n                    case 'down':\n                    default:\n                        this._maxRows = 0;\n                        break;\n                }\n            }\n\n            this._updatePositionsAfterMaxChange();\n        }\n\n        this._calculateColWidth();\n        this._calculateRowHeight();\n\n        var maxWidth = this._maxCols * this.colWidth;\n        var maxHeight = this._maxRows * this.rowHeight;\n\n        if (maxWidth > 0 && this.minWidth > maxWidth) this.minWidth = 0.75 * this.colWidth;\n        if (maxHeight > 0 && this.minHeight > maxHeight) this.minHeight = 0.75 * this.rowHeight;\n\n        if (this.minWidth > this.colWidth) this.minCols = Math.max(this.minCols, Math.ceil(this.minWidth / this.colWidth));\n        if (this.minHeight > this.rowHeight) this.minRows = Math.max(this.minRows, Math.ceil(this.minHeight / this.rowHeight));\n\n        if (this._maxCols > 0 && this.minCols > this._maxCols) this.minCols = 1;\n        if (this._maxRows > 0 && this.minRows > this._maxRows) this.minRows = 1;\n\n        this._updateRatio();\n\n        this._items.forEach((item: NgGridItem) => {\n            this._removeFromGrid(item);\n            item.setCascadeMode(this.cascade);\n        });\n\n        this._items.forEach((item: NgGridItem) => {\n            item.recalculateSelf();\n            this._addToGrid(item);\n        });\n\n        this._cascadeGrid();\n        this._updateSize();\n    }\n\n    public getItemPosition(itemId: string): NgGridItemPosition {\n        return this._items.has(itemId) ? this._items.get(itemId).getGridPosition() : null;\n    }\n\n    public getItemSize(itemId: string): NgGridItemSize {\n        return this._items.has(itemId) ? this._items.get(itemId).getSize() : null;\n    }\n\n    public ngDoCheck(): boolean {\n        if (this._differ != null) {\n            var changes = this._differ.diff(this._config);\n\n            if (changes != null) {\n                this._applyChanges(changes);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public setMargins(margins: Array<string>): void {\n        this.marginTop = Math.max(parseInt(margins[0]), 0);\n        this.marginRight = margins.length >= 2 ? Math.max(parseInt(margins[1]), 0) : this.marginTop;\n        this.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2]), 0) : this.marginTop;\n        this.marginLeft = margins.length >= 4 ? Math.max(parseInt(margins[3]), 0) : this.marginRight;\n    }\n\n    public enableDrag(): void {\n        this.dragEnable = true;\n    }\n\n    public disableDrag(): void {\n        this.dragEnable = false;\n    }\n\n    public enableResize(): void {\n        this.resizeEnable = true;\n    }\n\n    public disableResize(): void {\n        this.resizeEnable = false;\n    }\n\n    public addItem(ngItem: NgGridItem): void {\n        ngItem.setCascadeMode(this.cascade);\n\n        if (!this._preferNew) {\n            var newPos = this._fixGridPosition(ngItem.getGridPosition(), ngItem.getSize());\n            ngItem.setGridPosition(newPos);\n        }\n\n        if (ngItem.uid === null || this._items.has(ngItem.uid)) {\n            ngItem.uid = this.generateItemUid();\n        }\n\n        this._items.set(ngItem.uid, ngItem);\n        this._addToGrid(ngItem);\n\n        this._updateSize();\n\n        this.triggerCascade().then(() => {\n            ngItem.recalculateSelf();\n            ngItem.onCascadeEvent();\n\n            this._emitOnItemChange();\n        });\n\n    }\n\n    public removeItem(ngItem: NgGridItem): void {\n        this._removeFromGrid(ngItem);\n\n        this._items.delete(ngItem.uid);\n\n        if (this._destroyed) return;\n\n        this.triggerCascade().then(() => {\n            this._updateSize();\n            this._items.forEach((item: NgGridItem) => item.recalculateSelf());\n            this._emitOnItemChange();\n        });\n    }\n\n    public updateItem(ngItem: NgGridItem): void {\n        this._removeFromGrid(ngItem);\n        this._addToGrid(ngItem);\n\n        this.triggerCascade().then(() => {\n            this._updateSize();\n            ngItem.onCascadeEvent();\n        });\n    }\n\n    public triggerCascade(): Promise<void> {\n        if (!this._cascadePromise) {\n            this._cascadePromise = new Promise<void>((resolve: () => void) => {\n                setTimeout(() => {\n                    this._cascadePromise = null;\n                    this._cascadeGrid(null, null);\n                    resolve();\n                }, 0);\n            });\n        }\n\n        return this._cascadePromise;\n    }\n\n    public triggerResize(): void {\n        this.resizeEventHandler(null);\n    }\n\n    public resizeEventHandler(e: any): void {\n        // this._calculateColWidth();\n        // this._calculateRowHeight();\n        //\n        // this._updateRatio();\n\n        if (this._limitToScreen) {\n            const newMaxColumns = this._getContainerColumns();\n            if (this._maxCols !== newMaxColumns) {\n                this._maxCols = newMaxColumns;\n                // this._updatePositionsAfterMaxChange();\n                // this._cascadeGrid();\n            }\n\n            if (this._centerToScreen) {\n                this.screenMargin = this._getScreenMargin();\n\n                this._items.forEach((item: NgGridItem) => {\n                    item.recalculateSelf();\n                });\n            }\n        } else if (this._autoResize) {\n            this._items.forEach((item: NgGridItem) => {\n                item.recalculateSelf();\n            });\n        }\n\n        // this._updateSize();\n    }\n\n    public mouseDownEventHandler(e: MouseEvent | TouchEvent): void {\n        var mousePos = this._getMousePosition(e);\n        var item = this._getItemFromPosition(mousePos, true);\n\n        if (item == null) return;\n\n        const resizeDirection: string = item.canResize(e);\n\n        if (this.resizeEnable && resizeDirection) {\n            this._resizeReady = true;\n            this._resizingItem = item;\n            this._resizeDirection = resizeDirection;\n\n            e.preventDefault();\n        } else if (this.dragEnable && item.canDrag(e)) {\n            this._dragReady = true;\n            this._draggingItem = item;\n\n            const itemPos = item.getPosition();\n            this._posOffset = { 'left': (mousePos.left - itemPos.left), 'top': (mousePos.top - itemPos.top) }\n\n            e.preventDefault();\n        }\n    }\n\n    public mouseUpEventHandler(e: MouseEvent | TouchEvent): void {\n        if (this.isDragging) {\n            this._dragStop(e);\n        } else if (this.isResizing) {\n            this._resizeStop(e);\n        } else if (this._dragReady || this._resizeReady) {\n            this._cleanDrag();\n            this._cleanResize();\n        }\n    }\n\n    public mouseMoveEventHandler(e: MouseEvent | TouchEvent): void {\n        if (this._resizeReady) {\n            this._resizeStart(e);\n            e.preventDefault();\n            return;\n        } else if (this._dragReady) {\n            this._dragStart(e);\n            e.preventDefault();\n            return;\n        }\n\n        if (this.isDragging) {\n            this._drag(e);\n        } else if (this.isResizing) {\n            this._resize(e);\n        } else {\n            var mousePos = this._getMousePosition(e);\n            var item = this._getItemFromPosition(mousePos);\n\n            if (item) {\n                item.onMouseMove(e);\n            }\n        }\n    }\n\n    //    Private methods\n    private _getFixDirectionFromCascade(): NgConfigFixDirection {\n        switch (this.cascade) {\n            case 'up':\n            case 'down':\n            default:\n                return 'vertical';\n            case 'left':\n            case 'right':\n                return 'horizontal';\n        }\n    }\n    private _updatePositionsAfterMaxChange(): void {\n        this._items.forEach((item: NgGridItem) => {\n            var pos = item.getGridPosition();\n            var dims = item.getSize();\n\n            if (!this._hasGridCollision(pos, dims) && this._isWithinBounds(pos, dims) && dims.x <= this._maxCols && dims.y <= this._maxRows) {\n                return;\n            }\n\n            this._removeFromGrid(item);\n\n            if (this._maxCols > 0 && dims.x > this._maxCols) {\n                dims.x = this._maxCols;\n                item.setSize(dims);\n            } else if (this._maxRows > 0 && dims.y > this._maxRows) {\n                dims.y = this._maxRows;\n                item.setSize(dims);\n            }\n\n            if (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims, true)) {\n                var newPosition = this._fixGridPosition(pos, dims);\n                item.setGridPosition(newPosition);\n            }\n\n            this._addToGrid(item);\n        });\n    }\n\n    private _calculateColWidth(): void {\n        if (this._autoResize) {\n            if (this._maxCols > 0 || this._visibleCols > 0) {\n                var maxCols = this._maxCols > 0 ? this._maxCols : this._visibleCols;\n                var maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\n\n                var colWidth: number = Math.floor(maxWidth / maxCols);\n                colWidth -= (this.marginLeft + this.marginRight);\n                if (colWidth > 0) this.colWidth = colWidth;\n\n            }\n        }\n\n        if (this.colWidth < this.minWidth || this.minCols > this._config.min_cols) {\n            this.minCols = Math.max(this._config.min_cols, Math.ceil(this.minWidth / this.colWidth));\n        }\n    }\n\n    private _calculateRowHeight(): void {\n        if (this._autoResize) {\n            if (this._maxRows > 0 || this._visibleRows > 0) {\n                var maxRows = this._maxRows > 0 ? this._maxRows : this._visibleRows;\n                let maxHeight: number;\n\n                if (this._elementBasedDynamicRowHeight) {\n                    maxHeight = this._ngEl.nativeElement.getBoundingClientRect().height;\n                } else {\n                    maxHeight = window.innerHeight - this.marginTop - this.marginBottom;\n                }\n\n                var rowHeight: number = Math.max(Math.floor(maxHeight / maxRows), this.minHeight);\n                rowHeight -= (this.marginTop + this.marginBottom);\n                if (rowHeight > 0) this.rowHeight = rowHeight;\n\n            }\n        }\n\n        if (this.rowHeight < this.minHeight || this.minRows > this._config.min_rows) {\n            this.minRows = Math.max(this._config.min_rows, Math.ceil(this.minHeight / this.rowHeight));\n        }\n    }\n\n    private _updateRatio(): void {\n        if (!this._autoResize || !this._maintainRatio) return;\n\n        if (this._maxCols > 0 && this._visibleRows <= 0) {\n            this.rowHeight = this.colWidth / this._aspectRatio;\n        } else if (this._maxRows > 0 && this._visibleCols <= 0) {\n            this.colWidth = this._aspectRatio * this.rowHeight;\n        } else if (this._maxCols == 0 && this._maxRows == 0) {\n            if (this._visibleCols > 0) {\n                this.rowHeight = this.colWidth / this._aspectRatio;\n            } else if (this._visibleRows > 0) {\n                this.colWidth = this._aspectRatio * this.rowHeight;\n            }\n        }\n    }\n\n    private _applyChanges(changes: any): void {\n        changes.forEachAddedItem((record: any) => { this._config[record.key] = record.currentValue; });\n        changes.forEachChangedItem((record: any) => { this._config[record.key] = record.currentValue; });\n        changes.forEachRemovedItem((record: any) => { delete this._config[record.key]; });\n\n        this.setConfig(this._config);\n    }\n\n    private _resizeStart(e: any): void {\n        if (!this.resizeEnable || !this._resizingItem) return;\n\n        //    Setup\n        this._resizingItem.startMoving();\n        this._removeFromGrid(this._resizingItem);\n        this._createPlaceholder(this._resizingItem);\n\n        if (this._allowOverlap) {\n            this._resizingItem.zIndex = this._lastZValue++;\n        }\n\n        //    Status Flags\n        this.isResizing = true;\n        this._resizeReady = false;\n\n        //    Events\n        this.onResizeStart.emit(this._resizingItem);\n        this._resizingItem.onResizeStartEvent();\n    }\n\n    private _dragStart(e: any): void {\n        if (!this.dragEnable || !this._draggingItem) return;\n\n        //    Start dragging\n        this._draggingItem.startMoving();\n        this._removeFromGrid(this._draggingItem);\n        this._createPlaceholder(this._draggingItem);\n\n        if (this._allowOverlap) {\n            this._draggingItem.zIndex = this._lastZValue++;\n        }\n\n        //    Status Flags\n        this.isDragging = true;\n        this._dragReady = false;\n\n        //    Events\n        this.onDragStart.emit(this._draggingItem);\n        this._draggingItem.onDragStartEvent();\n\n        //    Zoom\n        if (this._zoomOnDrag) {\n            this._zoomOut();\n        }\n    }\n\n    private _zoomOut(): void {\n        this._renderer.setStyle(this._ngEl.nativeElement, 'transform', 'scale(0.5, 0.5)');\n    }\n\n    private _resetZoom(): void {\n        this._renderer.setStyle(this._ngEl.nativeElement, 'transform', '');\n    }\n\n    private _drag(e: any): void {\n        if (!this.isDragging) return;\n\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges) {\n                window.getSelection().removeAllRanges();\n            }\n        } else if ((<any>document).selection) {\n            (<any>document).selection.empty();\n        }\n\n        var mousePos = this._getMousePosition(e);\n        var newL = (mousePos.left - this._posOffset.left);\n        var newT = (mousePos.top - this._posOffset.top);\n\n        var itemPos = this._draggingItem.getGridPosition();\n        var gridPos = this._calculateGridPosition(newL, newT);\n        var dims = this._draggingItem.getSize();\n\n        gridPos = this._fixPosToBoundsX(gridPos, dims);\n\n        if (!this._isWithinBoundsY(gridPos, dims)) {\n            gridPos = this._fixPosToBoundsY(gridPos, dims);\n        }\n\n        if (gridPos.col != itemPos.col || gridPos.row != itemPos.row) {\n            this._draggingItem.setGridPosition(gridPos, this._fixToGrid);\n            this._placeholderRef.instance.setGridPosition(gridPos);\n\n            if (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\n                this._fixGridCollisions(gridPos, dims);\n                this._cascadeGrid(gridPos, dims);\n            }\n        }\n\n        if (!this._fixToGrid) {\n            this._draggingItem.setPosition(newL, newT);\n        }\n\n        this.onDrag.emit(this._draggingItem);\n        this._draggingItem.onDragEvent();\n    }\n\n    private _resize(e: any): void {\n        if (!this.isResizing) { return; }\n\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges) {\n                window.getSelection().removeAllRanges();\n            }\n        } else if ((<any>document).selection) {\n            (<any>document).selection.empty();\n        }\n\n        const mousePos = this._getMousePosition(e);\n        const itemPos = this._resizingItem.getPosition();\n        const itemDims = this._resizingItem.getDimensions();\n        const endCorner = {\n            left: itemPos.left + itemDims.width,\n            top: itemPos.top + itemDims.height,\n        }\n\n        const resizeTop = this._resizeDirection.includes('top');\n        const resizeBottom = this._resizeDirection.includes('bottom');\n        const resizeLeft = this._resizeDirection.includes('left')\n        const resizeRight = this._resizeDirection.includes('right');\n\n        // Calculate new width and height based upon resize direction\n        let newW = resizeRight\n            ? (mousePos.left - itemPos.left + 1)\n            : resizeLeft\n                ? (endCorner.left - mousePos.left + 1)\n                : itemDims.width;\n        let newH = resizeBottom\n            ? (mousePos.top - itemPos.top + 1)\n            : resizeTop\n                ? (endCorner.top - mousePos.top + 1)\n                : itemDims.height;\n\n        if (newW < this.minWidth)\n            newW = this.minWidth;\n        if (newH < this.minHeight)\n            newH = this.minHeight;\n        if (newW < this._resizingItem.minWidth)\n            newW = this._resizingItem.minWidth;\n        if (newH < this._resizingItem.minHeight)\n            newH = this._resizingItem.minHeight;\n\n        let newX = itemPos.left;\n        let newY = itemPos.top;\n\n        if (resizeLeft)\n            newX = endCorner.left - newW;\n        if (resizeTop)\n            newY = endCorner.top - newH;\n\n        let calcSize = this._calculateGridSize(newW, newH);\n        const itemSize = this._resizingItem.getSize();\n        const iGridPos = this._resizingItem.getGridPosition();\n        const bottomRightCorner = {\n            col: iGridPos.col + itemSize.x,\n            row: iGridPos.row + itemSize.y,\n        };\n        const targetPos: NgGridItemPosition = Object.assign({}, iGridPos);\n\n        if (this._resizeDirection.includes('top'))\n            targetPos.row = bottomRightCorner.row - calcSize.y;\n        if (this._resizeDirection.includes('left'))\n            targetPos.col = bottomRightCorner.col - calcSize.x;\n\n        if (!this._isWithinBoundsX(targetPos, calcSize))\n            calcSize = this._fixSizeToBoundsX(targetPos, calcSize);\n\n        if (!this._isWithinBoundsY(targetPos, calcSize))\n            calcSize = this._fixSizeToBoundsY(targetPos, calcSize);\n\n        calcSize = this._resizingItem.fixResize(calcSize);\n\n        if (calcSize.x != itemSize.x || calcSize.y != itemSize.y) {\n            this._resizingItem.setGridPosition(targetPos, this._fixToGrid);\n            this._placeholderRef.instance.setGridPosition(targetPos);\n            this._resizingItem.setSize(calcSize, this._fixToGrid);\n            this._placeholderRef.instance.setSize(calcSize);\n\n            if (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\n                this._fixGridCollisions(targetPos, calcSize);\n                this._cascadeGrid(targetPos, calcSize);\n            }\n        }\n\n        if (!this._fixToGrid) {\n            this._resizingItem.setDimensions(newW, newH);\n            this._resizingItem.setPosition(newX, newY);\n        }\n\n        this.onResize.emit(this._resizingItem);\n        this._resizingItem.onResizeEvent();\n    }\n\n    private _dragStop(e: any): void {\n        if (!this.isDragging) return;\n\n        this.isDragging = false;\n\n        var itemPos = this._draggingItem.getGridPosition();\n\n        this._draggingItem.setGridPosition(itemPos);\n        this._addToGrid(this._draggingItem);\n\n        this._cascadeGrid();\n        this._updateSize();\n\n        this._draggingItem.stopMoving();\n        this._draggingItem.onDragStopEvent();\n        this.onDragStop.emit(this._draggingItem);\n\n        this._cleanDrag();\n        this._placeholderRef.destroy();\n\n        this._emitOnItemChange();\n\n        if (this._zoomOnDrag) {\n            this._resetZoom();\n        }\n    }\n\n    private _resizeStop(e: any): void {\n        if (!this.isResizing) return;\n\n        this.isResizing = false;\n\n        const itemDims = this._resizingItem.getSize();\n        this._resizingItem.setSize(itemDims);\n\n        const itemPos = this._resizingItem.getGridPosition();\n        this._resizingItem.setGridPosition(itemPos);\n\n        this._addToGrid(this._resizingItem);\n\n        this._cascadeGrid();\n        this._updateSize();\n\n        this._resizingItem.stopMoving();\n        this._resizingItem.onResizeStopEvent();\n        this.onResizeStop.emit(this._resizingItem);\n\n        this._cleanResize();\n        this._placeholderRef.destroy();\n\n        this._emitOnItemChange();\n    }\n\n    private _cleanDrag(): void {\n        this._draggingItem = null;\n        this._posOffset = null;\n        this.isDragging = false;\n        this._dragReady = false;\n    }\n\n    private _cleanResize(): void {\n        this._resizingItem = null;\n        this._resizeDirection = null;\n        this.isResizing = false;\n        this._resizeReady = false;\n    }\n\n    private _calculateGridSize(width: number, height: number): NgGridItemSize {\n        width += this.marginLeft + this.marginRight;\n        height += this.marginTop + this.marginBottom;\n\n        var sizex = Math.max(this.minCols, Math.round(width / (this.colWidth + this.marginLeft + this.marginRight)));\n        var sizey = Math.max(this.minRows, Math.round(height / (this.rowHeight + this.marginTop + this.marginBottom)));\n\n        if (!this._isWithinBoundsX({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizex = this._maxCols;\n        if (!this._isWithinBoundsY({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizey = this._maxRows;\n\n        return { 'x': sizex, 'y': sizey };\n    }\n\n    private _calculateGridPosition(left: number, top: number): NgGridItemPosition {\n        var col = Math.max(1, Math.round(left / (this.colWidth + this.marginLeft + this.marginRight)) + 1);\n        var row = Math.max(1, Math.round(top / (this.rowHeight + this.marginTop + this.marginBottom)) + 1);\n\n        if (!this._isWithinBoundsX({ col: col, row: row }, { x: 1, y: 1 })) col = this._maxCols;\n        if (!this._isWithinBoundsY({ col: col, row: row }, { x: 1, y: 1 })) row = this._maxRows;\n\n        return { 'col': col, 'row': row };\n    }\n\n    private _hasGridCollision(pos: NgGridItemPosition, dims: NgGridItemSize): boolean {\n      return false;\n    }\n\n    private _getCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): Array<NgGridItem> {\n        if (this._allowOverlap) return [];\n\n        const returns: Array<NgGridItem> = [];\n\n        if (!pos.col) { pos.col = 1; }\n        if (!pos.row) { pos.row = 1; }\n\n        const leftCol = pos.col;\n        const rightCol = pos.col + dims.x;\n        const topRow = pos.row;\n        const bottomRow = pos.row + dims.y;\n\n        this._itemsInGrid.forEach((itemId: string) => {\n            const item: NgGridItem = this._items.get(itemId);\n\n            if (!item) {\n                this._itemsInGrid.delete(itemId);\n                return;\n            }\n\n            const itemLeftCol = item.col;\n            const itemRightCol = item.col + item.sizex;\n            const itemTopRow = item.row;\n            const itemBottomRow = item.row + item.sizey;\n\n            const withinColumns = leftCol < itemRightCol && itemLeftCol < rightCol;\n            const withinRows = topRow < itemBottomRow && itemTopRow < bottomRow;\n\n            if (withinColumns && withinRows) {\n                returns.push(item);\n            }\n        });\n\n        return returns;\n    }\n\n    private _fixGridCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): void {\n        const collisions: Array<NgGridItem> = this._getCollisions(pos, dims);\n        if (collisions.length === 0) { return; }\n\n        for (let collision of collisions) {\n            this._removeFromGrid(collision);\n\n            const itemDims: NgGridItemSize = collision.getSize();\n            const itemPos: NgGridItemPosition = collision.getGridPosition();\n            let newItemPos: NgGridItemPosition = { col: itemPos.col, row: itemPos.row };\n\n            if (this._collisionFixDirection === 'vertical') {\n                newItemPos.row = pos.row + dims.y;\n\n                if (!this._isWithinBoundsY(newItemPos, itemDims)) {\n                    newItemPos.col = pos.col + dims.x;\n                    newItemPos.row = 1;\n                }\n            } else if (this._collisionFixDirection === 'horizontal') {\n                newItemPos.col = pos.col + dims.x;\n\n                if (!this._isWithinBoundsX(newItemPos, itemDims)) {\n                    newItemPos.col = 1;\n                    newItemPos.row = pos.row + dims.y;\n                }\n            }\n\n            collision.setGridPosition(newItemPos);\n\n            this._fixGridCollisions(newItemPos, itemDims);\n            this._addToGrid(collision);\n            collision.onCascadeEvent();\n        }\n\n        this._fixGridCollisions(pos, dims);\n    }\n\n    private _cascadeGrid(pos?: NgGridItemPosition, dims?: NgGridItemSize): void {\n        if (this._destroyed) return;\n        if (this._allowOverlap) return;\n        if (!pos !== !dims) throw new Error('Cannot cascade with only position and not dimensions');\n\n        if (this.isDragging && this._draggingItem && !pos && !dims) {\n            pos = this._draggingItem.getGridPosition();\n            dims = this._draggingItem.getSize();\n        } else if (this.isResizing && this._resizingItem && !pos && !dims) {\n            pos = this._resizingItem.getGridPosition();\n            dims = this._resizingItem.getSize();\n        }\n\n        let itemsInGrid: NgGridItem[] = Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId));\n\n        switch (this.cascade) {\n            case 'up':\n            case 'down':\n                itemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionVertical);\n                const lowestRowPerColumn: Map<number, number> = new Map<number, number>();\n\n                for (let item of itemsInGrid) {\n                    if (item.isFixed) continue;\n\n                    const itemDims: NgGridItemSize = item.getSize();\n                    const itemPos: NgGridItemPosition = item.getGridPosition();\n\n                    let lowestRowForItem: number = lowestRowPerColumn.get(itemPos.col) || 1;\n\n                    for (let i: number = 1; i < itemDims.x; i++) {\n                        const lowestRowForColumn = lowestRowPerColumn.get(itemPos.col + i) || 1;\n                        lowestRowForItem = Math.max(lowestRowForColumn, lowestRowForItem);\n                    }\n\n                    const leftCol = itemPos.col;\n                    const rightCol = itemPos.col + itemDims.x;\n\n                    if (pos && dims) {\n                        const withinColumns = rightCol > pos.col && leftCol < (pos.col + dims.x);\n\n                        if (withinColumns) {          // If our element is in one of the item's columns\n                            const roomAboveItem = itemDims.y <= (pos.row - lowestRowForItem);\n\n                            if (!roomAboveItem) {                                                  // Item can't fit above our element\n                                lowestRowForItem = Math.max(lowestRowForItem, pos.row + dims.y);   // Set the lowest row to be below it\n                            }\n                        }\n                    }\n\n                    const newPos: NgGridItemPosition = { col: itemPos.col, row: lowestRowForItem };\n\n                    //    What if it's not within bounds Y?\n                    if (lowestRowForItem != itemPos.row && this._isWithinBoundsY(newPos, itemDims)) { // If the item is not already on this row move it up\n                        this._removeFromGrid(item);\n\n                        item.setGridPosition(newPos);\n\n                        item.onCascadeEvent();\n                        this._addToGrid(item);\n                    }\n\n                    for (let i: number = 0; i < itemDims.x; i++) {\n                        lowestRowPerColumn.set(itemPos.col + i, lowestRowForItem + itemDims.y); // Update the lowest row to be below the item\n                    }\n                }\n                break;\n            case 'left':\n            case 'right':\n                itemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionHorizontal);\n                const lowestColumnPerRow: Map<number, number> = new Map<number, number>();\n\n                for (let item of itemsInGrid) {\n                    const itemDims: NgGridItemSize = item.getSize();\n                    const itemPos: NgGridItemPosition = item.getGridPosition();\n\n                    let lowestColumnForItem: number = lowestColumnPerRow.get(itemPos.row) || 1;\n\n                    for (let i: number = 1; i < itemDims.y; i++) {\n                        let lowestOffsetColumn: number = lowestColumnPerRow.get(itemPos.row + i) || 1;\n                        lowestColumnForItem = Math.max(lowestOffsetColumn, lowestColumnForItem);\n                    }\n\n                    const topRow = itemPos.row;\n                    const bottomRow = itemPos.row + itemDims.y;\n\n                    if (pos && dims) {\n                        const withinRows = bottomRow > pos.col && topRow < (pos.col + dims.x);\n\n                        if (withinRows) {          // If our element is in one of the item's rows\n                            const roomNextToItem = itemDims.x <= (pos.col - lowestColumnForItem);\n\n                            if (!roomNextToItem) {                                                      // Item can't fit next to our element\n                                lowestColumnForItem = Math.max(lowestColumnForItem, pos.col + dims.x);  // Set the lowest col to be the other side of it\n                            }\n                        }\n                    }\n\n                    const newPos: NgGridItemPosition = { col: lowestColumnForItem, row: itemPos.row };\n\n                    if (lowestColumnForItem != itemPos.col && this._isWithinBoundsX(newPos, itemDims)) { // If the item is not already on this col move it up\n                        this._removeFromGrid(item);\n\n                        item.setGridPosition(newPos);\n\n                        item.onCascadeEvent();\n                        this._addToGrid(item);\n                    }\n\n                    for (let i: number = 0; i < itemDims.y; i++) {\n                        lowestColumnPerRow.set(itemPos.row + i, lowestColumnForItem + itemDims.x); // Update the lowest col to be below the item\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _fixGridPosition(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        if (!this._hasGridCollision(pos, dims)) return pos;\n\n        const maxRow = this._maxRows === 0 ? this._getMaxRow() : this._maxRows;\n        const maxCol = this._maxCols === 0 ? this._getMaxCol() : this._maxCols;\n        const newPos = {\n            col: pos.col,\n            row: pos.row,\n        };\n\n        if (this._itemFixDirection === 'vertical') {\n            fixLoop:\n            for (; newPos.col <= maxRow;) {\n                const itemsInPath = this._getItemsInVerticalPath(newPos, dims, newPos.row);\n                let nextRow = newPos.row;\n\n                for (let item of itemsInPath) {\n                    if (item.row - nextRow >= dims.y) {\n                        newPos.row = nextRow;\n                        break fixLoop;\n                    }\n\n                    nextRow = item.row + item.sizey;\n                }\n\n                if (maxRow - nextRow >= dims.y) {\n                    newPos.row = nextRow;\n                    break fixLoop;\n                }\n\n                newPos.col = Math.max(newPos.col + 1, Math.min.apply(Math, itemsInPath.map((item) => item.col + dims.x)));\n                newPos.row = 1;\n            }\n        } else if (this._itemFixDirection === 'horizontal') {\n            fixLoop:\n            for (; newPos.row <= maxRow;) {\n                const itemsInPath = this._getItemsInHorizontalPath(newPos, dims, newPos.col);\n                let nextCol = newPos.col;\n\n                for (let item of itemsInPath) {\n                    if (item.col - nextCol >= dims.x) {\n                        newPos.col = nextCol;\n                        break fixLoop;\n                    }\n\n                    nextCol = item.col + item.sizex;\n                }\n\n                if (maxCol - nextCol >= dims.x) {\n                    newPos.col = nextCol;\n                    break fixLoop;\n                }\n\n                newPos.row = Math.max(newPos.row + 1, Math.min.apply(Math, itemsInPath.map((item) => item.row + dims.y)));\n                newPos.col = 1;\n            }\n        }\n\n        return newPos;\n    }\n\n    private _getItemsInHorizontalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startColumn: number = 0): NgGridItem[] {\n        const itemsInPath: NgGridItem[] = [];\n        const topRow: number = pos.row + dims.y - 1;\n\n        this._itemsInGrid.forEach((itemId: string) => {\n            const item = this._items.get(itemId);\n            if (item.col + item.sizex - 1 < startColumn) { return; }    // Item falls after start column\n            if (item.row > topRow) { return; }                          // Item falls above path\n            if (item.row + item.sizey - 1 < pos.row) { return; }        // Item falls below path\n            itemsInPath.push(item);\n        });\n\n        return itemsInPath;\n    }\n\n    private _getItemsInVerticalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startRow: number = 0): NgGridItem[] {\n        const itemsInPath: NgGridItem[] = [];\n        const rightCol: number = pos.col + dims.x - 1;\n\n        this._itemsInGrid.forEach((itemId: string) => {\n            const item = this._items.get(itemId);\n            if (item.row + item.sizey - 1 < startRow) { return; }   // Item falls above start row\n            if (item.col > rightCol) { return; }                    // Item falls after path\n            if (item.col + item.sizex - 1 < pos.col) { return; }    // Item falls before path\n            itemsInPath.push(item);\n        });\n\n        return itemsInPath;\n    }\n\n    private _isWithinBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\n        return this._maxCols == 0 || (allowExcessiveItems && pos.col == 1) || (pos.col + dims.x - 1) <= this._maxCols;\n    }\n\n    private _fixPosToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        if (!this._isWithinBoundsX(pos, dims)) {\n            pos.col = Math.max(this._maxCols - (dims.x - 1), 1);\n            pos.row ++;\n        }\n        return pos;\n    }\n\n    private _fixSizeToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\n        if (!this._isWithinBoundsX(pos, dims)) {\n            dims.x = Math.max(this._maxCols - (pos.col - 1), 1);\n            dims.y++;\n        }\n        return dims;\n    }\n\n    private _isWithinBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\n        return this._maxRows == 0 || (allowExcessiveItems && pos.row == 1) || (pos.row + dims.y - 1) <= this._maxRows;\n    }\n\n    private _fixPosToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        if (!this._isWithinBoundsY(pos, dims)) {\n            pos.row = Math.max(this._maxRows - (dims.y - 1), 1);\n            pos.col++;\n        }\n        return pos;\n    }\n\n    private _fixSizeToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\n        if (!this._isWithinBoundsY(pos, dims)) {\n            dims.y = Math.max(this._maxRows - (pos.row - 1), 1);\n            dims.x++;\n        }\n        return dims;\n    }\n\n    private _isWithinBounds(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\n        return this._isWithinBoundsX(pos, dims, allowExcessiveItems) && this._isWithinBoundsY(pos, dims, allowExcessiveItems);\n    }\n\n    private _fixPosToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        return this._fixPosToBoundsX(this._fixPosToBoundsY(pos, dims), dims);\n    }\n\n    private _fixSizeToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\n        return this._fixSizeToBoundsX(pos, this._fixSizeToBoundsY(pos, dims));\n    }\n\n    private _addToGrid(item: NgGridItem): void {\n        let pos: NgGridItemPosition = item.getGridPosition();\n        const dims: NgGridItemSize = item.getSize();\n\n        if (this._hasGridCollision(pos, dims)) {\n            this._fixGridCollisions(pos, dims);\n            pos = item.getGridPosition();\n        }\n\n        if (this._allowOverlap) {\n            item.zIndex = this._lastZValue++;\n        }\n\n        this._itemsInGrid.add(item.uid);\n    }\n\n    private _removeFromGrid(item: NgGridItem): void {\n        this._itemsInGrid.delete(item.uid);\n    }\n\n    private _updateSize(): void {\n        if (this._destroyed) return;\n        let maxCol: number = this._getMaxCol();\n        let maxRow: number = this._getMaxRow();\n\n        if (maxCol != this._curMaxCol || maxRow != this._curMaxRow) {\n            this._curMaxCol = maxCol;\n            this._curMaxRow = maxRow;\n        }\n\n        this._renderer.setStyle(this._ngEl.nativeElement, 'width', '100%');//(maxCol * (this.colWidth + this.marginLeft + this.marginRight))+'px');\n        if (!this._elementBasedDynamicRowHeight) {\n            this._renderer.setStyle(this._ngEl.nativeElement, 'height', (maxRow * (this.rowHeight + this.marginTop + this.marginBottom)) + 'px');\n        }\n    }\n\n    private _getMaxRow(): number {\n        const itemsRows: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\n            const item = this._items.get(itemId);\n            if (!item) return 0;\n            return item.row + item.sizey - 1;\n        });\n\n        return Math.max.apply(null, itemsRows);\n    }\n\n    private _getMaxCol(): number {\n        const itemsCols: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\n            const item = this._items.get(itemId);\n            if (!item) return 0;\n            return item.col + item.sizex - 1;\n        });\n\n        return Math.max.apply(null, itemsCols);\n    }\n\n    private _getMousePosition(e: any): NgGridRawPosition {\n        if (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\n            e = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\n        }\n\n        const refPos: any = this._ngEl.nativeElement.getBoundingClientRect();\n\n        let left: number = e.clientX - refPos.left;\n        let top: number = e.clientY - refPos.top;\n\n        if (this.cascade == 'down') top = refPos.top + refPos.height - e.clientY;\n        if (this.cascade == 'right') left = refPos.left + refPos.width - e.clientX;\n\n        if (this.isDragging && this._zoomOnDrag) {\n            left *= 2;\n            top *= 2;\n        }\n\n        return {\n            left: left,\n            top: top\n        };\n    }\n\n    private _getAbsoluteMousePosition(e: any): NgGridRawPosition {\n        if (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\n            e = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\n        }\n\n        return {\n            left: e.clientX,\n            top: e.clientY\n        };\n    }\n\n    private _getContainerColumns(): number {\n        const maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\n        const itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\n        return Math.floor(maxWidth / itemWidth);\n    }\n\n    private _getContainerRows(): number {\n        const maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\n        return Math.floor(maxHeight / (this.rowHeight + this.marginTop + this.marginBottom));\n    }\n\n    private _getScreenMargin(): number {\n        const maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\n        const itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\n        return Math.floor((maxWidth - (this._maxCols * itemWidth)) / 2);\n    }\n\n    private _getItemFromPosition(position: NgGridRawPosition, dragStart?: boolean): NgGridItem {\n        return Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId)).find((item: NgGridItem) => {\n            if (!item) return false;\n\n            const size: NgGridItemDimensions = item.getDimensions();\n            const pos: NgGridRawPosition = item.getPosition();\n\n            if (position.left > (pos.left + this.marginLeft) && position.left < (pos.left + this.marginLeft + size.width) &&\n                position.top > (pos.top + this.marginTop) && position.top < (pos.top + this.marginTop + size.height)) {\n                if (dragStart) {\n                    if (item.config.active) {\n                        return item;\n                    }\n                } else {\n                    return item;\n                }\n                return position.left >= pos.left && position.left < (pos.left + size.width)\n                    && position.top >= pos.top && position.top < (pos.top + size.height);\n            }\n        });\n    }\n\n    private _createPlaceholder(item: NgGridItem): void {\n        const pos: NgGridItemPosition = item.getGridPosition();\n        const dims: NgGridItemSize = item.getSize();\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(NgGridPlaceholder);\n        var componentRef: ComponentRef<NgGridPlaceholder> = item.containerRef.createComponent(factory);\n        this._placeholderRef = componentRef;\n        const placeholder: NgGridPlaceholder = componentRef.instance;\n        placeholder.registerGrid(this);\n        placeholder.setCascadeMode(this.cascade);\n        placeholder.setGridPosition({ col: pos.col, row: pos.row });\n        placeholder.setSize({ x: dims.x, y: dims.y });\n    }\n\n    private _emitOnItemChange() {\n        const itemOutput: any[] = Array.from(this._itemsInGrid)\n            .map((itemId: string) => this._items.get(itemId))\n            .filter((item: NgGridItem) => !!item)\n            .map((item: NgGridItem) => item.getEventOutput());\n\n        this.onItemChange.emit(itemOutput);\n    }\n\n    private _defineListeners(): void {\n        const element = this._ngEl.nativeElement;\n\n        this._documentMousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n        this._documentMouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n        this._mousedown$ = fromEvent(element, 'mousedown');\n        this._mousemove$ = fromEvent(element, 'mousemove');\n        this._mouseup$ = fromEvent(element, 'mouseup');\n        this._touchstart$ = fromEvent(element, 'touchstart');\n        this._touchmove$ = fromEvent(element, 'touchmove');\n        this._touchend$ = fromEvent(element, 'touchend');\n    }\n\n    private _enableListeners(): void {\n        if (this._enabledListener) {\n            return;\n        }\n\n        this._enableMouseListeners();\n\n        if (this._isTouchDevice()) {\n            this._enableTouchListeners();\n        }\n\n        this._enabledListener = true;\n    }\n\n    private _disableListeners(): void {\n        this._subscriptions.forEach((subs: Subscription) => subs.unsubscribe());\n        this._enabledListener = false;\n    }\n\n    private _isTouchDevice(): boolean {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    };\n\n    private _enableTouchListeners(): void {\n        const touchstartSubs = this._touchstart$.subscribe((e: TouchEvent) => this.mouseDownEventHandler(e));\n        const touchmoveSubs = this._touchmove$.subscribe((e: TouchEvent) => this.mouseMoveEventHandler(e));\n        const touchendSubs = this._touchend$.subscribe((e: TouchEvent) => this.mouseUpEventHandler(e));\n\n        this._subscriptions.push(\n            touchstartSubs,\n            touchmoveSubs,\n            touchendSubs\n        );\n    }\n\n    private _enableMouseListeners(): void {\n        const documentMousemoveSubs = this._documentMousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\n        const documentMouseupSubs = this._documentMouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\n        const mousedownSubs = this._mousedown$.subscribe((e: MouseEvent) => this.mouseDownEventHandler(e));\n        const mousemoveSubs = this._mousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\n        const mouseupSubs = this._mouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\n\n        this._subscriptions.push(\n            documentMousemoveSubs,\n            documentMouseupSubs,\n            mousedownSubs,\n            mousemoveSubs,\n            mouseupSubs\n        );\n    }\n}\n","import { NgGrid } from './NgGrid';\nimport { NgGridItemConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, ResizeHandle } from '../interfaces/INgGrid';\nimport { Directive, ElementRef, Renderer2, EventEmitter, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, ViewContainerRef, Output, DoCheck } from '@angular/core';\n\n@Directive({\n    selector: '[ngGridItem]',\n    inputs: ['config: ngGridItem']\n})\nexport class NgGridItem implements OnInit, OnDestroy, DoCheck {\n    // Event Emitters\n    @Output() public onItemChange: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>(false);\n    @Output() public onDragStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onDrag: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onDragStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onDragAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResizeStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResize: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResizeStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResizeAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChangeStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChange: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChangeStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChangeAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public ngGridItemChange: EventEmitter<NgGridItemConfig> = new EventEmitter<NgGridItemConfig>();\n\n    // Default config\n    private static CONST_DEFAULT_CONFIG: NgGridItemConfig = {\n        uid: null,\n        col: 1,\n        row: 1,\n        sizex: 1,\n        sizey: 1,\n        dragHandle: null,\n        resizeHandle: null,\n        fixed: false,\n        draggable: true,\n        resizable: true,\n        borderSize: 25,\n        resizeDirections: null,\n    };\n\n    public isFixed: boolean = false;\n    public isDraggable: boolean = true;\n    public isResizable: boolean = true;\n    public minWidth: number = 0;\n    public minHeight: number = 0;\n    public uid: string = null;\n\n    // Private variables\n    private _payload: any;\n    private _currentPosition: NgGridItemPosition = { col: 1, row: 1 };\n    private _size: NgGridItemSize = { x: 1, y: 1 };\n    private _config = NgGridItem.CONST_DEFAULT_CONFIG;\n    private _userConfig = null;\n    private _dragHandle: string;\n    private _resizeHandle: ResizeHandle;\n    private _borderSize: number;\n    private _elemWidth: number;\n    private _elemHeight: number;\n    private _elemLeft: number;\n    private _elemTop: number;\n    private _added: boolean = false;\n    private _differ: KeyValueDiffer<string, any>;\n    private _cascadeMode: string;\n    private _maxCols: number = 0;\n    private _minCols: number = 0;\n    private _maxRows: number = 0;\n    private _minRows: number = 0;\n    private _resizeDirections: string[] = [];\n    private _zIndex: number = 0;\n\n    set zIndex(zIndex: number) {\n        this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', zIndex.toString());\n        this._zIndex = zIndex;\n    }\n\n    get zIndex(): number {\n        return this._zIndex;\n    }\n\n    // [ng-grid-item] handler\n    set config(v: NgGridItemConfig) {\n        this._userConfig = v;\n\n        const configObject = Object.assign({}, NgGridItem.CONST_DEFAULT_CONFIG, v);\n        for (let x in NgGridItem.CONST_DEFAULT_CONFIG)\n            if (configObject[x] == null)\n                configObject[x] = NgGridItem.CONST_DEFAULT_CONFIG[x];\n\n        this.setConfig(configObject);\n\n        if (this._userConfig != null) {\n            if (this._differ == null) {\n                this._differ = this._differs.find(this._userConfig).create();\n            }\n\n            this._differ.diff(this._userConfig);\n        }\n\n        if (!this._added) {\n            this._added = true;\n            this._ngGrid.addItem(this);\n        }\n\n        this._recalculateDimensions();\n        this._recalculatePosition();\n    }\n\n    get sizex(): number {\n        return this._size.x;\n    }\n\n    get sizey(): number {\n        return this._size.y;\n    }\n\n    get col(): number {\n        return this._currentPosition.col;\n    }\n\n    get row(): number {\n        return this._currentPosition.row;\n    }\n\n    get currentCol(): number {\n        return this._currentPosition.col;\n    }\n\n    get currentRow(): number {\n        return this._currentPosition.row;\n    }\n\n    // Constructor\n    constructor(\n        private _differs: KeyValueDiffers,\n        private _ngEl: ElementRef,\n        private _renderer: Renderer2,\n        private _ngGrid: NgGrid,\n        public containerRef: ViewContainerRef,\n    ) { }\n\n    public onResizeStartEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onResizeStart.emit(event);\n        this.onResizeAny.emit(event);\n        this.onChangeStart.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onResizeEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onResize.emit(event);\n        this.onResizeAny.emit(event);\n        this.onChange.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onResizeStopEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onResizeStop.emit(event);\n        this.onResizeAny.emit(event);\n        this.onChangeStop.emit(event);\n        this.onChangeAny.emit(event);\n\n        this.onConfigChangeEvent();\n    }\n    public onDragStartEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onDragStart.emit(event);\n        this.onDragAny.emit(event);\n        this.onChangeStart.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onDragEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onDrag.emit(event);\n        this.onDragAny.emit(event);\n        this.onChange.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onDragStopEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onDragStop.emit(event);\n        this.onDragAny.emit(event);\n        this.onChangeStop.emit(event);\n        this.onChangeAny.emit(event);\n\n        this.onConfigChangeEvent();\n    }\n    public onCascadeEvent(): void {\n        this.onConfigChangeEvent();\n    }\n\n    public ngOnInit(): void {\n        this._renderer.addClass(this._ngEl.nativeElement, 'grid-item');\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'position', 'absolute');\n        this._recalculateDimensions();\n        this._recalculatePosition();\n\n        // Force a config update in case there is no config assigned\n        this.config = this._userConfig;\n    }\n\n    // Public methods\n    public canDrag(e: any): boolean {\n        if (!this.isDraggable) return false;\n\n        if (this._dragHandle) {\n            return this.findHandle(this._dragHandle, e.target);\n        }\n\n        return true;\n    }\n\n    public findHandle(handleSelector: string, startElement: HTMLElement): boolean {\n        try {\n            let targetElem: any = startElement;\n\n            while (targetElem && targetElem != this._ngEl.nativeElement) {\n                if (this.elementMatches(targetElem, handleSelector)) return true;\n\n                targetElem = targetElem.parentElement;\n            }\n        } catch (err) {}\n\n        return false;\n    }\n\n    public canResize(e: any): string {\n        if (!this.isResizable) return null;\n\n        if (this._resizeHandle) {\n            if (typeof this._resizeHandle === 'string') {\n                return this.findHandle(this._resizeHandle, e.target) ? 'bottomright' : null;\n            }\n\n            if (typeof this._resizeHandle !== 'object') return null;\n\n            const resizeDirections = [ 'bottomright', 'bottomleft', 'topright', 'topleft', 'right', 'left', 'bottom', 'top' ];\n            for (let direction of resizeDirections) {\n                if (direction in this._resizeHandle) {\n                    if (this.findHandle(this._resizeHandle[direction], e.target)) {\n                        return direction;\n                    }\n                }\n            }\n\n            return null;\n        }\n\n        if (this._borderSize <= 0) return null;\n\n        const mousePos: NgGridRawPosition = this._getMousePosition(e);\n\n        for (let direction of this._resizeDirections) {\n            if (this.canResizeInDirection(direction, mousePos)) {\n                return direction;\n            }\n        }\n\n        return null;\n    }\n\n    public onMouseMove(e: any): void {\n        if (this._ngGrid.autoStyle) {\n            if (this._ngGrid.resizeEnable) {\n                const resizeDirection = this.canResize(e);\n\n                let cursor: string = 'default';\n                switch (resizeDirection) {\n                    case 'bottomright':\n                    case 'topleft':\n                        cursor = 'nwse-resize';\n                        break;\n                    case 'topright':\n                    case 'bottomleft':\n                        cursor = 'nesw-resize';\n                        break;\n                    case 'top':\n                    case 'bottom':\n                        cursor = 'ns-resize';\n                        break;\n                    case 'left':\n                    case 'right':\n                        cursor = 'ew-resize';\n                        break;\n                    default:\n                        if (this._ngGrid.dragEnable && this.canDrag(e)) {\n                            cursor = 'move';\n                        }\n                        break;\n                }\n\n                this._renderer.setStyle(this._ngEl.nativeElement, 'cursor', cursor);\n            } else if (this._ngGrid.dragEnable && this.canDrag(e)) {\n                this._renderer.setStyle(this._ngEl.nativeElement, 'cursor', 'move');\n            } else {\n                this._renderer.setStyle(this._ngEl.nativeElement, 'cursor', 'default');\n            }\n        }\n    }\n\n    public ngOnDestroy(): void {\n        if (this._added) this._ngGrid.removeItem(this);\n    }\n\n    //    Getters\n    public getElement(): ElementRef {\n        return this._ngEl;\n    }\n\n    public getDragHandle(): string {\n        return this._dragHandle;\n    }\n\n    public getResizeHandle(): ResizeHandle {\n        return this._resizeHandle;\n    }\n\n    public getDimensions(): NgGridItemDimensions {\n        return { 'width': this._elemWidth, 'height': this._elemHeight };\n    }\n\n    public getSize(): NgGridItemSize {\n        return this._size;\n    }\n\n    public getPosition(): NgGridRawPosition {\n        return { 'left': this._elemLeft, 'top': this._elemTop };\n    }\n\n    public getGridPosition(): NgGridItemPosition {\n        return this._currentPosition;\n    }\n\n    //    Setters\n    public setConfig(config: NgGridItemConfig): void {\n        this._config = config;\n\n        this._payload = config.payload;\n        this._currentPosition.col = config.col ? config.col : NgGridItem.CONST_DEFAULT_CONFIG.col;\n        this._currentPosition.row = config.row ? config.row : NgGridItem.CONST_DEFAULT_CONFIG.row;\n        this._size.x = config.sizex ? config.sizex : NgGridItem.CONST_DEFAULT_CONFIG.sizex;\n        this._size.y = config.sizey ? config.sizey : NgGridItem.CONST_DEFAULT_CONFIG.sizey;\n        this._dragHandle = config.dragHandle;\n        this._resizeHandle = config.resizeHandle;\n        this._borderSize = config.borderSize;\n        this.isDraggable = config.draggable ? true : false;\n        this.isResizable = config.resizable ? true : false;\n        this.isFixed = config.fixed ? true : false;\n        this._resizeDirections = config.resizeDirections || this._ngGrid.resizeDirections;\n\n        this._maxCols = !isNaN(config.maxCols) && isFinite(config.maxCols) ? config.maxCols : 0;\n        this._minCols = !isNaN(config.minCols) && isFinite(config.minCols) ? config.minCols : 0;\n        this._maxRows = !isNaN(config.maxRows) && isFinite(config.maxRows) ? config.maxRows : 0;\n        this._minRows = !isNaN(config.minRows) && isFinite(config.minRows) ? config.minRows : 0;\n\n        this.minWidth = !isNaN(config.minWidth) && isFinite(config.minWidth) ? config.minWidth : 0;\n        this.minHeight = !isNaN(config.minHeight) && isFinite(config.minHeight) ? config.minHeight : 0;\n\n        if (this._minCols > 0 && this._maxCols > 0 && this._minCols > this._maxCols) this._minCols = 0;\n        if (this._minRows > 0 && this._maxRows > 0 && this._minRows > this._maxRows) this._minRows = 0;\n\n        if (this._added) {\n            this._ngGrid.updateItem(this);\n        }\n\n        this._size = this.fixResize(this._size);\n\n        this._recalculatePosition();\n        this._recalculateDimensions();\n    }\n\n    public ngDoCheck(): boolean {\n        if (this._differ != null) {\n            const changes: any = this._differ.diff(this._userConfig);\n\n            if (changes != null) {\n                return this._applyChanges(changes);\n            }\n        }\n\n        return false;\n    }\n\n    public setSize(newSize: NgGridItemSize, update: boolean = true): void {\n        newSize = this.fixResize(newSize);\n        this._size = newSize;\n        if (update) this._recalculateDimensions();\n\n        this.onItemChange.emit(this.getEventOutput());\n    }\n\n    public setGridPosition(gridPosition: NgGridItemPosition, update: boolean = true): void {\n        this._currentPosition = gridPosition;\n        if (update) this._recalculatePosition();\n\n        this.onItemChange.emit(this.getEventOutput());\n    }\n\n    public getEventOutput(): NgGridItemEvent {\n        return <NgGridItemEvent>{\n            uid: this.uid,\n            payload: this._payload,\n            col: this._currentPosition.col,\n            row: this._currentPosition.row,\n            sizex: this._size.x,\n            sizey: this._size.y,\n            width: this._elemWidth,\n            height: this._elemHeight,\n            left: this._elemLeft,\n            top: this._elemTop\n        };\n    }\n\n    public setPosition(x: number, y: number): void {\n        switch (this._cascadeMode) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', x + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', y + 'px');\n                break;\n            case 'right':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', x + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', y + 'px');\n                break;\n            case 'down':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', x + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', y + 'px');\n                break;\n        }\n\n        this._elemLeft = x;\n        this._elemTop = y;\n    }\n\n    public setCascadeMode(cascade: string): void {\n        this._cascadeMode = cascade;\n        switch (cascade) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', this._elemLeft + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', this._elemTop + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'right':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', this._elemLeft + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', this._elemTop + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'down':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', this._elemLeft + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', this._elemTop + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', null);\n                break;\n        }\n    }\n\n    public setDimensions(w: number, h: number): void {\n        if (w < this.minWidth) w = this.minWidth;\n        if (h < this.minHeight) h = this.minHeight;\n\n        this._renderer.setStyle(this._ngEl.nativeElement, 'width', w + 'px');\n        this._renderer.setStyle(this._ngEl.nativeElement, 'height', h + 'px');\n\n        this._elemWidth = w;\n        this._elemHeight = h;\n    }\n\n    public startMoving(): void {\n        this._renderer.addClass(this._ngEl.nativeElement, 'moving');\n        const style: any = window.getComputedStyle(this._ngEl.nativeElement);\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', (parseInt(style.getPropertyValue('z-index')) + 1).toString());\n    }\n\n    public stopMoving(): void {\n        this._renderer.removeClass(this._ngEl.nativeElement, 'moving');\n        const style: any = window.getComputedStyle(this._ngEl.nativeElement);\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', (parseInt(style.getPropertyValue('z-index')) - 1).toString());\n    }\n\n    public recalculateSelf(): void {\n        this._recalculatePosition();\n        this._recalculateDimensions();\n    }\n\n    public fixResize(newSize: NgGridItemSize): NgGridItemSize {\n        if (this._maxCols > 0 && newSize.x > this._maxCols) newSize.x = this._maxCols;\n        if (this._maxRows > 0 && newSize.y > this._maxRows) newSize.y = this._maxRows;\n\n        if (this._minCols > 0 && newSize.x < this._minCols) newSize.x = this._minCols;\n        if (this._minRows > 0 && newSize.y < this._minRows) newSize.y = this._minRows;\n\n        const itemWidth = (newSize.x * this._ngGrid.colWidth) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (newSize.x - 1));\n        if (itemWidth < this.minWidth) newSize.x = Math.ceil((this.minWidth + this._ngGrid.marginRight + this._ngGrid.marginLeft) / (this._ngGrid.colWidth + this._ngGrid.marginRight + this._ngGrid.marginLeft));\n\n        const itemHeight = (newSize.y * this._ngGrid.rowHeight) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (newSize.y - 1));\n        if (itemHeight < this.minHeight) newSize.y = Math.ceil((this.minHeight + this._ngGrid.marginBottom + this._ngGrid.marginTop) / (this._ngGrid.rowHeight + this._ngGrid.marginBottom + this._ngGrid.marginTop));\n\n        return newSize;\n    }\n\n    // Private methods\n    private elementMatches(element: any, selector: string): boolean {\n        if (!element) return false;\n        if (element.matches) return element.matches(selector);\n        if (element.oMatchesSelector) return element.oMatchesSelector(selector);\n        if (element.msMatchesSelector) return element.msMatchesSelector(selector);\n        if (element.mozMatchesSelector) return element.mozMatchesSelector(selector);\n        if (element.webkitMatchesSelector) return element.webkitMatchesSelector(selector);\n\n        if (!element.document || !element.ownerDocument) return false;\n\n        const matches: any = (element.document || element.ownerDocument).querySelectorAll(selector);\n        let i: number = matches.length;\n        while (--i >= 0 && matches.item(i) !== element) { }\n        return i > -1;\n    }\n\n    private _recalculatePosition(): void {\n        const x: number = (this._ngGrid.colWidth + this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._currentPosition.col - 1) + this._ngGrid.marginLeft + this._ngGrid.screenMargin;\n        const y: number = (this._ngGrid.rowHeight + this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._currentPosition.row - 1) + this._ngGrid.marginTop;\n\n        this.setPosition(x, y);\n    }\n\n    private _recalculateDimensions(): void {\n        if (this._size.x < this._ngGrid.minCols) this._size.x = this._ngGrid.minCols;\n        if (this._size.y < this._ngGrid.minRows) this._size.y = this._ngGrid.minRows;\n\n        const newWidth: number = (this._ngGrid.colWidth * this._size.x) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._size.x - 1));\n        const newHeight: number = (this._ngGrid.rowHeight * this._size.y) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._size.y - 1));\n\n        const w: number = Math.max(this.minWidth, this._ngGrid.minWidth, newWidth);\n        const h: number = Math.max(this.minHeight, this._ngGrid.minHeight, newHeight);\n\n        this.setDimensions(w, h);\n    }\n\n    private _getMousePosition(e: any): NgGridRawPosition {\n        if (e.originalEvent && e.originalEvent.touches) {\n            const oe: any = e.originalEvent;\n            e = oe.touches.length ? oe.touches[0] : (oe.changedTouches.length ? oe.changedTouches[0] : e);\n        } else if (e.touches) {\n            e = e.touches.length ? e.touches[0] : (e.changedTouches.length ? e.changedTouches[0] : e);\n        }\n\n\n        const refPos: NgGridRawPosition = this._ngEl.nativeElement.getBoundingClientRect();\n\n        return {\n            left: e.clientX - refPos.left,\n            top: e.clientY - refPos.top\n        };\n    }\n\n    private _applyChanges(changes: any): boolean {\n        let changed: boolean = false;\n        const changeCheck = (record: any) => {\n            if (this._config[record.key] !== record.currentValue) {\n                this._config[record.key] = record.currentValue;\n                changed = true;\n            }\n        };\n        changes.forEachAddedItem(changeCheck);\n        changes.forEachChangedItem(changeCheck);\n        changes.forEachRemovedItem((record: any) => {\n            changed = true;\n            delete this._config[record.key];\n        });\n\n        if (changed) {\n            this.setConfig(this._config);\n        }\n\n        return changed;\n    }\n\n    private onConfigChangeEvent() {\n        if (this._userConfig === null) return;\n\n        this._config.sizex = this._userConfig.sizex = this._size.x;\n        this._config.sizey = this._userConfig.sizey = this._size.y;\n        this._config.col = this._userConfig.col = this._currentPosition.col;\n        this._config.row = this._userConfig.row = this._currentPosition.row;\n        this.ngGridItemChange.emit(this._userConfig);\n    }\n\n    private canResizeInDirection(direction: string, mousePos: NgGridRawPosition): boolean {\n        switch (direction) {\n            case 'bottomright':\n                return mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize\n                    && mousePos.top < this._elemHeight && mousePos.top > this._elemHeight - this._borderSize; // tslint:disable-line:indent\n            case 'bottomleft':\n                return mousePos.left < this._borderSize && mousePos.top < this._elemHeight\n                    && mousePos.top > this._elemHeight - this._borderSize; // tslint:disable-line:indent\n            case 'topright':\n                return mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize\n                    && mousePos.top < this._borderSize; // tslint:disable-line:indent\n            case 'topleft':\n                return mousePos.left < this._borderSize && mousePos.top < this._borderSize;\n            case 'right':\n                return mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize;\n            case 'left':\n                return mousePos.left < this._borderSize;\n            case 'bottom':\n                return mousePos.top < this._elemHeight && mousePos.top > this._elemHeight - this._borderSize;\n            case 'top':\n                return mousePos.top < this._borderSize;\n            default:\n                return false;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NgGrid } from '../directives/NgGrid';\nimport { NgGridItem } from '../directives/NgGridItem';\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\n\n@NgModule({\n  declarations:     [ NgGrid, NgGridItem, NgGridPlaceholder ],\n  entryComponents:  [ NgGridPlaceholder ],\n  exports:          [ NgGrid, NgGridItem ]\n})\nexport class NgGridModule {}\n"],"names":["NgGridHelper.generateUuid","NgGridHelper.sortItemsByPositionVertical","NgGridHelper.sortItemsByPositionHorizontal"],"mappings":"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"}